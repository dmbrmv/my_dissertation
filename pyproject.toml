[tool.ruff]
# Include Jupyter notebooks in linting
extend-include = ["*.ipynb"]
# Set line length to match common Python standards
line-length = 88
target-version = "py310"

[tool.ruff.lint]
# Expanded rule selection for better code quaity
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "I",    # isort (import sorting)
    "N",    # pep8-naming
    "D",    # pydocstring
    "UP",   # pyupgrade (modernize Python code)
    "B",    # flake8-bugbear (likely bugs)
    "S",    # flake8-bandit (security)
    "C4",   # flake8-comprehensions
    "Q",    # flake8-quotes
    "T20",  # flake8-print (avoid print statements)
]

# Ignore specific rules that might be too strict
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "S101",  # Use of assert (common in tests)
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"

[tool.ruff.lint.isort]
# Configure import sorting
known-first-party = ["floodforecast"]
split-on-trailing-comma = true

[tool.ruff.lint.pydocstyle]
# Use Google docstring convention
convention = "google"

[tool.ruff.format]
# Use double quotes for consistency
quote-style = "double"
# Format docstrings
docstring-code-format = true

[tool.pyright]
pythonVersion = "3.10"
typeCheckingMode = "basic"
exclude = [
    "**/data",
    "/data",
    "**/__pycache__",
    ".venv",
    "build",
    "dist"
]
# Report missing imports
reportMissingImports = true
# Report missing type stubs
reportMissingTypeStubs = false

[project]
name = "hydro-eprf"
version = "0.1.0"
description = "Hydrological EPRF project with geospatial and machine learning capabilities"
authors = [
    { name = "Dmitrii Abramov", email = "dmbrmv96@gmail.com" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.10"